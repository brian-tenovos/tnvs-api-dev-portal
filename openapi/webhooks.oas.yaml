openapi: 3.1.0
info:
  version: v1.0
  title: Webhooks Introduction
  description: |
    ### **Tenovos Webhooks are currently in Beta and are expected to be generally available to Tenovos customers soon.**

    What is a webhook?  A webhook is an HTTP request, triggered by an event in a source system (Tenovos) and sent to a destination system.

    The destination system is managed by the reciever (customer) of the webhook, or for faster and easier implementation, Tenovos Connect can 
    automatically generate endpoints for recieving webhooks from Tenovos, or any other system.

    Webhooks are automated, in other words they are automatically sent out when their coresponding event occurs in Tenovos.  These events occur whether 
    you are using the Tenovos UI, or your own custom UI on top of the Tenovos platform.

  termsOfService: https://tenovos.com/terms-of-service
  contact:
    email: product@tenovos.com
  license:
    name: Tenovos Active Story Management
    url: https://www.tenovos.com/
webhooks:
  assetCreated:
    post:
      summary: Asset Created
      operationId: assetCreated
      description: Recieve a notification when an Asset in Tenovos is created.
      tags:
        - Assets
      requestBody:
        description: Information about a new asset in Tenovos
        content:
          application/json:
            schema:
              $ref: webhooks/requests/assets/asset.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)

  assetDeleted:
    post:
      summary: Asset Deleted
      operationId: assetDeleted
      description: Recieve a notification when an Asset in Tenovos is deleted.
      tags:
        - Assets
      requestBody:
        description: Information about an asset when it get's deleted in Tenovos
        content:
          application/json:
            schema:
              $ref: webhooks/requests/assets/asset.deleted.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  # assetDownloaded:
  #   post:
  #     summary: Asset Downloaded
  #     operationId: assetDownloaded
  #     description: Recieve a notification when an Asset in Tenovos is downloaded.
  #     tags:
  #       - Assets
  #     requestBody:
  #       description: Information about an asset when the download process for this asset has started
  #       content:
  #         application/json:
  #           schema:
  #             $ref: webhooks/requests/assets/asset.downloaded.yaml
  #     responses:
  #       '200':
  #         description: Return a 200 status to Tenovos to indicate that the data was received successfully
  assetPurged:
    post:
      summary: Asset Purged
      operationId: assetPurged
      description: Recieve a notification when an Asset in Tenovos is purged from the Recycle Bin.
      tags:
        - Assets
      requestBody:
        description: Information about an asset when it's Permanently deleted in Tenovos.  This information will no longer be available from Tenovos.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/assets/asset.purged.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  # assetRenditionCreated:
  #   post:
  #     summary: Renditions Created
  #     operationId: assetRenditionsCreated
  #     description: Recieve a notification when system generated renditions for an Asset in Tenovos have completed processing.
  #     tags:
  #       - Assets
  #     requestBody:
  #       description: Information about an asset and its renditions when the asset is created in Tenovos.  This event only occurs once the renditions have completed processing.
  #       content:
  #         application/json:
  #           schema:
  #             $ref: webhooks/requests/assets/asset.renditions.created.yaml
  #     responses:
  #       '200':
  #         description: Return a 200 status to Tenovos to indicate that the data was received successfully
  #         headers:
  #           webhook-id: 
  #             schema: 
  #               type: string
  #             description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
  #           webhook-timestamp:
  #             schema: 
  #               type: string
  #             description: Timestamp in seconds since epoch.
  #           webhook-signature:
  #             schema: 
  #               type: string
  #             description: The Base64 encoded list of signatures (space deliminated)
  # assetShared:
  #   post:
  #     summary: Asset Shared
  #     operationId: assetShared
  #     description: Recieve a notification when an Asset in Tenovos is shared with other users or external contacts.
  #     tags:
  #       - Assets
  #     requestBody:
  #       description: Information about an asset when it's Shared in Tenovos
  #       content:
  #         application/json:
  #           schema:
  #             $ref: webhooks/requests/assets/asset.shared.yaml
  #     responses:
  #       '200':
  #         description: Return a 200 status to Tenovos to indicate that the data was received successfully
  assetSecurityUpdated:
    post:
      summary: Security Updated
      operationId: assetSecurityUpdated
      description: Recieve a notification when the security templates applied to an Asset in Tenovos are updated.
      tags:
        - Assets
      requestBody:
        description: Information about an Asset's Security Templates are updated, with current and previous values
        content:
          application/json:
            schema:
              $ref: webhooks/requests/assets/asset.security.updated.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  assetMetadataUpdated:
    post:
      summary: Metadata Updated
      operationId: assetMetadataUpdated
      description: Recieve a notification when the Metadata applied to an Asset in Tenovos is updated.
      tags:
        - Assets
      requestBody:
        description: Information about an Asset's when the metadata is updated
        content:
          application/json:
            schema:
              $ref: webhooks/requests/assets/asset.metadata.updated.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  collectionCreated:
    post:
      summary: Collection Created
      operationId: collectionCreated
      description: Recieve a notification when an Collection in Tenovos is created.
      tags:
        - Collections
      requestBody:
        description: Information about a Collection when it is created in Tenovos.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/collections/collection.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  collectionUpdated:
    post:
      summary: Collection Updated
      operationId: collectionUpdated
      description: Recieve a notification when an asset is added to or removed from a Collection.
      tags:
        - Collections
      requestBody:
        description: Information about assets are added to or removed from a Collection.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/collections/collection.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  # collectionDeleted:
  #   post:
  #     summary: Collection Deleted
  #     operationId: collectionDeleted
  #     description: Recieve a notification when a Collection in Tenovos is deleted.
  #     tags:
  #       - Collections
  #     requestBody:
  #       description: Information about a Collection when it is deleted from Tenovos.
  #       content:
  #         application/json:
  #           schema:
  #             $ref: webhooks/requests/collections/collection.deleted.yaml
  #     responses:
  #       '200':
  #         description: Return a 200 status to Tenovos to indicate that the data was received successfully
  # collectionDownloaded:
  #   post:
  #     summary: Collection Downloaded
  #     operationId: collectionDownloaded
  #     description: Recieve a notification when an Collection in Tenovos is downloaded.
  #     tags:
  #       - Collections
  #     requestBody:
  #       description: Information about a Collection when it is downloaded from Tenovos.
  #       content:
  #         application/json:
  #           schema:
  #             $ref: webhooks/requests/collections/collection.downloaded.yaml
  #     responses:
  #       '200':
  #         description: Return a 200 status to Tenovos to indicate that the data was received successfully
  userCreated:
    post:
      summary: User Created
      operationId: userCreated
      description: Recieve a notification when a user account in Tenovos is created.
      tags:
        - Users
      requestBody:
        description: Information about a User when a new user account is added to Tenovos.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/users/user.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  userUpdated:
    post:
      summary: User Updated
      operationId: userUpdated
      description: Recieve a notification when a user account in Tenovos is updated.
      tags:
        - Users
      requestBody:
        description: Information about a User when a user account is updated in Tenovos.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/users/user.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  # relationshipCreated:
  #   post:
  #     summary: Relationship Created
  #     operationId: relationshipCreated
  #     description: Recieve a notification when an asset relationship in Tenovos is created.
  #     tags:
  #       - Relationships
  #     requestBody:
  #       description: Information about an Asset when a new relationship to it is created.
  #       content:
  #         application/json:
  #           schema:
  #             $ref: webhooks/requests/relationships/relationship.created.yaml
  #     responses:
  #       '200':
  #         description: Return a 200 status to Tenovos to indicate that the data was received successfully
  #         headers:
  #           webhook-id: 
  #             schema: 
  #               type: string
  #             description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
  #           webhook-timestamp:
  #             schema: 
  #               type: string
  #             description: Timestamp in seconds since epoch.
  #           webhook-signature:
  #             schema: 
  #               type: string
  #             description: The Base64 encoded list of signatures (space deliminated)
  # relationshipDeleted:
  #   post:
  #     summary: Relationship Deleted
  #     operationId: relationshipDeleted
  #     description: Recieve a notification when an asset relationship in Tenovos is deleted.
  #     tags:
  #       - Relationships
  #     requestBody:
  #       description: Information about an Asset when it's relationship to another assets is deleted/removed.
  #       content:
  #         application/json:
  #           schema:
  #             $ref: webhooks/requests/relationships/relationship.deleted.yaml
  #     responses:
  #       '200':
  #         description: Return a 200 status to Tenovos to indicate that the data was received successfully
  #         headers:
  #           webhook-id: 
  #             schema: 
  #               type: string
  #             description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
  #           webhook-timestamp:
  #             schema: 
  #               type: string
  #             description: Timestamp in seconds since epoch.
  #           webhook-signature:
  #             schema: 
  #               type: string
  #             description: The Base64 encoded list of signatures (space deliminated)
  projectCreated:
    post:
      summary: Project Created
      operationId: projectCreated
      description: Recieve a notification when a Rights Management project in Tenovos is created.
      tags:
        - Rights Management
      requestBody:
        description: Information about a RM Project when it is created.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/projects/rm.project.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  projectUpdated:
    post:
      summary: Project Updated
      operationId: projectUpdated
      description: Recieve a notification when a Rights Management Project in Tenovos is updated.
      tags:
        - Rights Management
      requestBody:
        description: Information about a RM Project when it is updated.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/projects/rm.project.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  projectDeleted:
    post:
      summary: Project Deleted
      operationId: projectDeleted
      description: Recieve a notification when a Rights Management Project in Tenovos is deleted.
      tags:
        - Rights Management
      requestBody:
        description: Information about a RM Project when it is deleted.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/projects/rm.project.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  entityCreated:
    post:
      summary: Entity Created
      operationId: entityCreated
      description: Recieve a notification when a Rights Management entity in Tenovos is created.
      tags:
        - Rights Management
      requestBody:
        description: Information about a RM Entity when it is created.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/entities/rm.entity.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  entityUpdated:
    post:
      summary: Entity Updated
      operationId: entityUpdated
      description: Recieve a notification when a Rights Management entity in Tenovos is updated.
      tags:
        - Rights Management
      requestBody:
        description: Information about a RM Entity when it is updated.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/entities/rm.entity.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  entityDeleted:
    post:
      summary: Entity Deleted
      operationId: entityDeleted
      description: Recieve a notification when a Rights Management entity in Tenovos is deleted.
      tags:
        - Rights Management
      requestBody:
        description: Information about a RM Entity when it is deleted.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/entities/rm.entity.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  agreementCreated:
    post:
      summary: Agreement Created
      operationId: agreementCreated
      description: Recieve a notification when a Rights Management agreement in Tenovos is created.
      tags:
        - Rights Management
      requestBody:
        description: Information about a RM Agreement when it is created.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/agreements/rm.agreement.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  agreementUpdated:
    post:
      summary: Agreement Updated
      operationId: agreementUpdated
      description: Recieve a notification when a Rights Management agreement in Tenovos is updated.
      tags:
        - Rights Management
      requestBody:
        description: Information about a RM Agreement when it is updated.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/agreements/rm.agreement.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  agreementDeleted:
    post:
      summary: Agreement Deleted
      operationId: agreementCDeleted
      description: Recieve a notification when a Rights Management agreement in Tenovos is deleted.
      tags:
        - Rights Management
      requestBody:
        description: Information about a RM Agreement when it is deleted.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/agreements/rm.agreement.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  storyboardCreated:
    post:
      summary: Story Board Created
      operationId: storyboardCreated
      description: Recieve a notification when a Story Board in Tenovos is created.
      tags:
        - Story Boards
      requestBody:
        description: Information about a Story Board when it is created.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/storyboards/storyboard.created.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  storyboardUpdated:
    post:
      summary: Story Board Updated
      operationId: storyboardUpdated
      description: Recieve a notification when a Story Board in Tenovos is updated.
      tags:
        - Story Boards
      requestBody:
        description: Information about a Story Board when it is updated.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/storyboards/storyboard.deleted.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  storyboardDeleted:
    post:
      summary: Story Board Deleted
      operationId: storyboardDeleted
      description: Recieve a notification when a Story Board in Tenovos is deleted.
      tags:
        - Story Boards
      requestBody:
        description: Information about a Story Board when it is deleted.
        content:
          application/json:
            schema:
              $ref: webhooks/requests/storyboards/storyboard.deleted.yaml
      responses:
        '200':
          description: Return a 200 status to Tenovos to indicate that the data was received successfully
          headers:
            webhook-id: 
              schema: 
                type: string
              description: The unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).
            webhook-timestamp:
              schema: 
                type: string
              description: Timestamp in seconds since epoch.
            webhook-signature:
              schema: 
                type: string
              description: The Base64 encoded list of signatures (space deliminated)
  # versionCreated:
  #   post:
  #     summary: Version Created
  #     operationId: versionCreated
  #     description: Recieve a notification when an Asset in Tenovos is versioned.
  #     tags:
  #       - Versions
  #     requestBody:
  #       description: Information about an Asset when it is versioned.  Initial ingest of an asset creates the first version, and is not covered by this event.
  #       content:
  #         application/json:
  #           schema:
  #             $ref: webhooks/requests/versions/version.created.yaml
  #     responses:
  #       '200':
  #         description: Return a 200 status to Tenovos to indicate that the data was received successfully
externalDocs:
  description: Find out more about Tenovos
  url: https://tenovos.com
servers:
  - url: https://api.tenovos.io/v2
  - url: https://api.uat.tenovos.io/v2
security:
  - OAuth2: []
tags:
  - name: Assets
    description: Asset related events
  - name: Collections
    description: Collection related events
  - name: Users
    description: User related events
  # - name: Relationships
  #   description: Relationship related events.
  - name: Rights Management
    description: Rights Management related events.
  - name: Story Boards
    description: Story Board related events
  # - name: Versions
  #   description: |
  #     ## Reference documentation for all available payload examples for Asset Versioning related events
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://api.tenovos.io/v2/oauth/authorize
          tokenUrl: https://api.tenovos.io/v2/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
            admin: Grants access to admin operations